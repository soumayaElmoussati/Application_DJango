# Generated by Django 3.2.9 on 2022-09-01 03:15

import app.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_inscription', models.DateTimeField(auto_now=True)),
                ('photo_profil', models.FileField(default='profils/user.png', upload_to=app.models.uploadito)),
                ('nom', models.CharField(max_length=200)),
                ('telephone', models.CharField(blank=True, max_length=200)),
                ('email', models.CharField(blank=True, max_length=200)),
                ('adresse', models.CharField(blank=True, max_length=600, null=True)),
                ('role', models.CharField(choices=[('ADMIN', 'ADMIN'), ('STAFF', 'STAFF'), ('LIVREUR', 'LIVREUR'), ('UTILISATEUR', 'UTILISATEUR')], max_length=60, null=True)),
                ('googleSheetApi', models.FileField(blank=True, null=True, upload_to=app.models.uploadito)),
                ('statut', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], max_length=200)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Boutiques',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(default='product/product.png', upload_to='boutique/')),
                ('nom', models.CharField(max_length=150)),
                ('adresses', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
                ('siteweb', models.CharField(blank=True, max_length=120, null=True)),
                ('numero_service_client', models.CharField(blank=True, max_length=120, null=True)),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bulkclients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent', models.CharField(blank=True, max_length=90, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('file', models.FilePathField()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateTimeField()),
                ('nom_complet', models.CharField(max_length=200)),
                ('telephone', models.CharField(blank=True, max_length=100, null=True)),
                ('adresse', models.CharField(blank=True, max_length=600, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('agent', models.CharField(blank=True, max_length=150, null=True)),
                ('methode_livraison', models.CharField(blank=True, choices=[('LIVRAISON A DOMICILE', 'LIVRAISON A DOMICILE'), ('STOP DESK', 'STOP DESK')], max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone_second', models.CharField(blank=True, max_length=100, null=True)),
                ('adresse', models.CharField(blank=True, max_length=100, null=True)),
                ('remarque', models.CharField(blank=True, max_length=100, null=True)),
                ('referent', models.CharField(blank=True, max_length=100, null=True)),
                ('sous_total', models.FloatField(blank=True, null=True)),
                ('livraison', models.FloatField(blank=True, null=True)),
                ('reduction', models.FloatField(blank=True, null=True)),
                ('echange', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('statut', models.CharField(blank=True, choices=[('CONFIRMER', 'CONFIRMER'), ('EN ATTENT', 'EN ATTENT')], max_length=100, null=True)),
                ('mode', models.CharField(blank=True, choices=[('en_confirmation', 'en_confirmation'), ('en_preparation', 'en_preparation'), ('en_dispatch', 'en_dispatch'), ('en_livraison', 'en_livraison'), ('livree', 'livree'), ('en_retour', 'en_retour'), ('annuler', 'annuler')], max_length=100, null=True)),
                ('encaisser', models.CharField(blank=True, choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=100, null=True)),
                ('json_products', models.CharField(blank=True, max_length=9000, null=True)),
                ('trackingnumber', models.CharField(blank=True, max_length=9000, null=True)),
                ('boutique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.boutiques')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.client')),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('agent', models.CharField(max_length=90)),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=130, null=True)),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Marque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=400)),
                ('position', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=30)),
                ('boutique', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.boutiques')),
            ],
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_francais', models.CharField(max_length=100)),
                ('nom_arabe', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('couleur', 'couleur'), ('taille', 'taille'), ('pointure', 'pointure')], max_length=100)),
                ('is_active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Wilaya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_francais', models.CharField(max_length=900)),
                ('nom_arabe', models.CharField(blank=True, max_length=900, null=True)),
                ('reference', models.CharField(blank=True, max_length=900, null=True, unique=True)),
                ('code_barre', models.CharField(blank=True, max_length=1000, null=True)),
                ('prix_vente', models.FloatField()),
                ('prix_achat', models.FloatField(blank=True, null=True)),
                ('reduction', models.FloatField(blank=True, null=True)),
                ('prix_promo', models.FloatField(blank=True, null=True)),
                ('produit_avec_option', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=90)),
                ('prix_option', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=90)),
                ('alert_rupture', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=90)),
                ('minimum_stock_alert', models.FloatField(blank=True, null=True)),
                ('is_Active', models.CharField(choices=[('OUI', 'ACTIVE'), ('NON', 'INACTIVE')], max_length=90)),
                ('image_1', models.FileField(default='product/product.png', upload_to='product/')),
                ('image_2', models.FileField(blank=True, null=True, upload_to='product/')),
                ('image_3', models.FileField(blank=True, null=True, upload_to='product/')),
                ('image_4', models.FileField(blank=True, null=True, upload_to='product/')),
                ('image_5', models.FileField(blank=True, null=True, upload_to='product/')),
                ('image_6', models.FileField(blank=True, null=True, upload_to='product/')),
                ('tarifs_livraison', models.CharField(choices=[('OUI', 'OPTION 1'), ('NON', 'OPTION 2')], max_length=90)),
                ('json_tarifs', models.CharField(blank=True, max_length=9000, null=True)),
                ('boutique', models.ManyToManyField(null=True, to='app.Boutiques')),
                ('fournisseur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.fournisseur')),
                ('marque', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.marque')),
                ('wilayas', models.ManyToManyField(null=True, to='app.Wilaya')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2')], max_length=100, null=True)),
                ('prix', models.FloatField(blank=True, null=True)),
                ('qte', models.IntegerField(blank=True, null=True)),
                ('total_order', models.FloatField(blank=True, null=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.commande')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Mouvement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('agent', models.CharField(max_length=90)),
                ('motif', models.CharField(blank=True, max_length=400, null=True)),
                ('qte', models.IntegerField()),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Livraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=400)),
                ('telephone', models.CharField(max_length=40)),
                ('platforme', models.CharField(max_length=400)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=30)),
                ('boutique', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.boutiques')),
                ('wilaya', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.wilaya')),
            ],
        ),
        migrations.CreateModel(
            name='Encaissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('agent', models.CharField(blank=True, max_length=150, null=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.commande')),
            ],
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('wilaya', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.wilaya')),
            ],
        ),
        migrations.AddField(
            model_name='commande',
            name='commun',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.commune'),
        ),
        migrations.AddField(
            model_name='commande',
            name='livreur_agent',
            field=models.ForeignKey(null=True, on_delete=models.SET(app.models.get_sentinel_user), related_name='livreur', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commande',
            name='utilisateur',
            field=models.ForeignKey(null=True, on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commande',
            name='wilaya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.wilaya'),
        ),
        migrations.AddField(
            model_name='client',
            name='commune',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.commune'),
        ),
        migrations.AddField(
            model_name='client',
            name='utilisateur',
            field=models.ForeignKey(null=True, on_delete=models.SET(app.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='client',
            name='wilaya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.wilaya'),
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_charge', models.CharField(blank=True, choices=[('CHARGE 1', 'CHARGE 1'), ('CHARGE 2', 'CHARGE 2')], max_length=200, null=True)),
                ('montant', models.FloatField()),
                ('commentaire', models.CharField(blank=True, max_length=200, null=True)),
                ('agent', models.CharField(blank=True, max_length=200, null=True)),
                ('date_comptabiliser', models.DateField()),
                ('date_saisie', models.DateTimeField()),
                ('boutique', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='app.boutiques')),
            ],
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='commune',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.commune'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='wilaya',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.wilaya'),
        ),
    ]
